# Домашнее задание по теме "Работа с классом Warning"
#
# Цель задания:
#
# Освоить механизмы создания и обработки исключений в Python.
# Научиться создавать собственные исключения, наследуя классы от Exception. Попрактиковаться в передаче исключений
# дальше по стеку вызовов.
#
# Задание:
#
# 1. Импортируйте модуль warnings.
# 2. Реализуйте функцию для расчёта деления, которая будет генерировать предупреждение, если делитель близок к нулю
# (например, меньше 0.01), предупреждая об опасности деления на ноль.
# 3. Сгенерируйте UserWarning в этом случае.
# 4. Используйте разные фильтры для управления поведением программы при появлении такого предупреждения: always, ignore,
# error
#
#
# Комментарии к заданию:
#
# Предупреждения часто используются для информирования о ситуациях, которые не являются критическими ошибками, но могут
# привести к потенциальным проблемам (например, устаревание использованного API или непредвиденное использование функции).
# В отличие от исключений, предупреждения не останавливают выполнение программы, но предоставляют полезную информацию
# разработчикам.

# Наглядный пример использования warnings в try-except:

# def function_with_warning():
#     try:
#         print("Перед генерацией предупреждения")
#         warnings.warn("Это важное предупреждение", UserWarning)
#         print("После генерации предупреждения")
#     except UserWarning as e:
#         print(f"Предупреждение было перехвачено как исключение: {e}")
#
#
# # Пример 1: Фильтр установлен в 'error'
# print("Пример 1: Фильтр 'error'")
# warnings.simplefilter("error", UserWarning)
# function_with_warning()
# print("\n")
#
# # Пример 2: Фильтр установлен в 'default'
# print("Пример 2: Фильтр 'default'")
# warnings.simplefilter("default", UserWarning)
# function_with_warning()

import warnings


def function_delenie(a, b):
    if a / b and b < 0.01:
        warnings.warn("Опасность деления на ноль!", UserWarning)
        print('Продолжается выполнение программы!')


function_delenie(10, 0.009)

for i in range(1, 5):
    i += i
    print(i)


print('Фильтр установлен в error')
warnings.simplefilter("error", UserWarning)
function_delenie(10, 0.009)
print("\n")

print('Фильтр установлен в always')
warnings.simplefilter("always", UserWarning)
function_delenie(10, 0.009)

print('Фильтр установлен в ignore')
warnings.simplefilter("ignore", UserWarning)
function_delenie(10, 0.009)